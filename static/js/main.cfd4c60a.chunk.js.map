{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","to","aboutText","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","placeholder","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","message","defaultProps","App","setMode","_useState3","_useState4","setAlert","msg","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cfd4c60a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" to=\"/about\">{props.aboutText}</a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n// define proptypes to rectify error if type is different \r\nNavbar.propTypes = {\r\n    // title: PropTypes.string,\r\n    title: PropTypes.string.isRequired, // isRequired will make sure the prop is defined otherwise it will give error\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n// default props if they are not set already\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n}","import React, {useState} from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleOnChange = (event)=>{\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  }\r\n  const handleUpClick = ()=>{\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase(); \r\n    // setText(\"You've clicked on handleUpClick\");\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper case!\", \"success\");\r\n  }\r\n  const handleLoClick = ()=>{\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase(); \r\n    // setText(\"You've clicked on handleUpClick\");\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower case!\", \"success\");\r\n  }\r\n  const handleClear = ()=>{\r\n    setText('');\r\n    props.showAlert(\"Text is cleared!\", \"success\");\r\n  }\r\n  const handleCopy = ()=>{\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"copied to Clipboard!\", \"success\");\r\n  }\r\n  const handleExtraSpaces = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces are removed!\", \"success\");\r\n  }\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"new text\"; // wrong way to change 'text'\r\n  // text = setText(\"new text\"); // correct way to change the 'text'\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} placeholder=\"Enter text here\" onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" ></textarea>\r\n  </div>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleClear}>Clear Text</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n  </div>\r\n  <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n    <h1>Your text summary</h1>\r\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Write something in textbox to preview\"}</p>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport ReactDOM from 'react-dom'\nimport './App.css';\nimport React, { useState } from 'react';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      message: msg,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is Amazing!\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now!\";\n      // }, 1500);\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\"\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n        {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n        <Navbar title='TextUtils' mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About />} />\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>} /> */}\n            {/* using exact path will make sure react will go to exact path (not partial), example:- \n            /users --> Component 1\n            /users/home --> Component 2\n            both components are different but if we don't use 'exact' react will redirect to Component 1  */}\n          {/* </Routes> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* <About /> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}